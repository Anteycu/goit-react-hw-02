{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/SectionTitle.js","components/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","onClick","handleGood","handleNeutral","handleBad","SectionTitle","title","children","Notification","message","App","state","props","initialValue","percentage","setState","step","countTotalFeedback","this","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"sLAGO,SAASA,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,4BACE,4BACE,mCAASJ,IAEX,4BACE,sCAAYC,IAEd,4BACE,kCAAQC,IAEV,4BACE,oCAAUC,IAEZ,4BACE,gDAAsBC,EAAtB,OChBD,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBAChC,OACE,6BACE,4BAAQC,KAAK,SAASC,QAASF,EAAgBG,YAA/C,QAGA,4BAAQF,KAAK,SAASC,QAASF,EAAgBI,eAA/C,WAGA,4BAAQH,KAAK,SAASC,QAASF,EAAgBK,WAA/C,QCTC,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpC,OACE,iCACE,4BAAKD,GACJC,GCJA,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,2BAAIA,GCEN,IAAMC,EAAb,4MAMEC,MAAQ,CACNlB,KAAM,EAAKmB,MAAMC,aACjBnB,QAAS,EAAKkB,MAAMC,aACpBlB,IAAK,EAAKiB,MAAMC,aAChBjB,MAAO,EAAKgB,MAAMC,aAClBC,WAAY,EAAKF,MAAMC,cAX3B,EAcEX,WAAa,WACX,EAAKa,UAAS,SAACJ,EAAOC,GAAR,MAAmB,CAC/BnB,KAAMkB,EAAMlB,KAAOmB,EAAMI,SAE3B,EAAKC,sBAlBT,EAqBEd,cAAgB,WACd,EAAKY,UAAS,SAACJ,EAAOC,GAAR,MAAmB,CAC/BlB,QAASiB,EAAMjB,QAAUkB,EAAMI,SAEjC,EAAKC,sBAzBT,EA4BEb,UAAY,WACV,EAAKW,UAAS,SAACJ,EAAOC,GAAR,MAAmB,CAC/BjB,IAAKgB,EAAMhB,IAAMiB,EAAMI,SAEzB,EAAKC,sBAhCT,mEAoCIC,KAAKH,UAAS,SAACJ,EAAOC,GAAR,MAAmB,CAC/BhB,MAAOe,EAAMf,MAAQgB,EAAMI,SAE7BE,KAAKC,oCAvCT,wDA2CID,KAAKH,UAAS,SAACJ,GAAD,MAAY,CACxBG,WAAaH,EAAMlB,KAAOkB,EAAMf,MAAS,UA5C/C,+BAiDI,OACE,oCACE,kBAACS,EAAD,CAAcC,MAAO,yBACnB,kBAACR,EAAD,CACEC,gBAAiB,CACfG,WAAYgB,KAAKhB,WACjBC,cAAee,KAAKf,cACpBC,UAAWc,KAAKd,cAItB,kBAACC,EAAD,CAAcC,MAAO,cAClBY,KAAKP,MAAMf,MAAQ,EAClB,kBAACJ,EAAD,CACEC,KAAMyB,KAAKP,MAAMlB,KACjBC,QAASwB,KAAKP,MAAMjB,QACpBC,IAAKuB,KAAKP,MAAMhB,IAChBC,MAAOsB,KAAKP,MAAMf,MAClBC,mBAAoBqB,KAAKP,MAAMG,aAGjC,kBAACN,EAAD,CAAcC,QAAQ,4BAtElC,GAAyBW,aAAZV,EACJW,aAAe,CACpBL,KAAM,EACNH,aAAc,GCLlBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.47e7fffe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <p>Good:{good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral:{neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad:{bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total:{total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback:{positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onLeaveFeedback.handleGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback.handleNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback.handleBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function SectionTitle({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport { Statistics } from \"./Statistics\";\nimport { FeedbackOptions } from \"./FeedbackOptions\";\nimport { SectionTitle } from \"./SectionTitle\";\nimport { Notification } from \"./Notification\";\n\nexport class App extends Component {\n  static defaultProps = {\n    step: 1,\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n    total: this.props.initialValue,\n    percentage: this.props.initialValue,\n  };\n\n  handleGood = () => {\n    this.setState((state, props) => ({\n      good: state.good + props.step,\n    }));\n    this.countTotalFeedback();\n  };\n\n  handleNeutral = () => {\n    this.setState((state, props) => ({\n      neutral: state.neutral + props.step,\n    }));\n    this.countTotalFeedback();\n  };\n\n  handleBad = () => {\n    this.setState((state, props) => ({\n      bad: state.bad + props.step,\n    }));\n    this.countTotalFeedback();\n  };\n\n  countTotalFeedback() {\n    this.setState((state, props) => ({\n      total: state.total + props.step,\n    }));\n    this.countPositiveFeedbackPercentage();\n  }\n\n  countPositiveFeedbackPercentage() {\n    this.setState((state) => ({\n      percentage: (state.good / state.total) * 100,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <SectionTitle title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            onLeaveFeedback={{\n              handleGood: this.handleGood,\n              handleNeutral: this.handleNeutral,\n              handleBad: this.handleBad,\n            }}\n          />\n        </SectionTitle>\n        <SectionTitle title={\"Statistics\"}>\n          {this.state.total > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.state.total}\n              positivePercentage={this.state.percentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </SectionTitle>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}